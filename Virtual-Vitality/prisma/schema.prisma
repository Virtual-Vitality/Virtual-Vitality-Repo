// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  userName     String         @unique
  password     String
  payment      Payment?
  coaches      Coach[]        @relation("assignedUsers")
  appointments Appointments[]
}

model Appointments {
  id      Int    @id @default(autoincrement())
  date    String
  coachId Int
  userId  Int
  coach   Coach  @relation(fields: [coachId], references: [id])
  user    User   @relation(fields: [userId], references: [id])
}

model Coach {
  id             Int            @id @default(autoincrement())
  name           String
  isNutritionist Boolean
  imgURL         String
  assignedUsers  User[]         @relation("assignedUsers")
  workoutTypes   WorkoutType[]
  appointments   Appointments[]
}

model WorkoutType {
  id       Int       @id @default(autoincrement())
  name     String
  coaches  Coach[]
  workouts Workout[]
}

model Payment {
  id             Int    @id @default(autoincrement())
  cardHolderName String
  cardNumber     Int    @unique
  expiration     String @db.VarChar(5)
  cvv            Int
  zipCode        Int
  user           User   @relation(fields: [userId], references: [id])
  userId         Int    @unique
}

model Exercise {
  id                   Int                    @id @default(autoincrement())
  name                 String
  muscleGroup          String
  description          String
  imgUrl               String
  videoLink            String
  exercisesOnWorkouts ExercisesOnWorkouts[]
}

model Workout {
  id                   Int                    @id @default(autoincrement())
  name                 String
  description          String
  exercisesOnWorkouts ExercisesOnWorkouts[]
  workoutType          WorkoutType            @relation(fields: [workoutTypeId], references: [id])
  workoutTypeId        Int
  difficulty           String?
}

model ExercisesOnWorkouts {
  id            Int       @id @default(autoincrement())
  exerciseId   Int
  workoutId     Int
  exercise      Exercise @relation(fields: [exerciseId], references: [id])
  workout       Workout   @relation(fields: [workoutId], references: [id])
  exerciseReps Int
  exerciseSets Int
}
